---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

interface Props {
    project: CollectionEntry<"projects">;
}

const { project } = Astro.props;

// Function to extract first image from markdown content
function extractFirstImage(content: string): string | null {
    // Match markdown image syntax ![alt](url)
    const imageMatch = content.match(/!\[.*?\]\((.*?)\)/);
    if (imageMatch && imageMatch[1]) {
        // Check if it's a relative path (starts with ./)
        if (imageMatch[1].startsWith('./')) {
            return imageMatch[1];
        }
        return imageMatch[1];
    }
    return null;
}

// Extract the first image from the project content
const firstImagePath = extractFirstImage(project.body);

// Try to load the image if it exists and is a relative path
let coverImage = null;
if (firstImagePath && firstImagePath.startsWith('./')) {
    try {
        // Dynamically import the image from the project's directory
        const images = import.meta.glob<{ default: ImageMetadata }>('/src/content/projects/**/*.{png,jpg,jpeg,webp}', { eager: true });
        const imagePath = `/src/content/projects/${project.slug}/${firstImagePath.replace('./', '')}`;
        if (images[imagePath]) {
            coverImage = images[imagePath].default;
        }
    } catch (e) {
        // Image couldn't be loaded
        console.error('Failed to load project image:', e);
    }
}
---

<article class="aspect-square bg-white border border-gray-200 rounded-lg overflow-hidden relative group hover:shadow-lg transition-shadow duration-200">
    <a href={`/projects/${project.slug}`} class="block w-full h-full">
        {coverImage ? (
            <div class="relative w-full h-full">
                <Image
                    src={coverImage}
                    alt={project.data.title}
                    class="w-full h-full object-cover"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent"></div>
                <div class="absolute bottom-0 left-0 right-0 p-6 text-white">
                    <h3 class="text-lg font-semibold mb-1">
                        {project.data.title}
                    </h3>
                    <p class="text-sm opacity-90 line-clamp-2">
                        {project.data.description}
                    </p>
                </div>
            </div>
        ) : (
            <div class="p-6 h-full flex flex-col justify-between">
                <div>
                    <h3 class="text-xl font-semibold text-black mb-3">
                        {project.data.title}
                    </h3>
                    <p class="text-gray-600 line-clamp-4">
                        {project.data.description}
                    </p>
                </div>
                <div class="flex items-center gap-4 text-sm">
                    {project.data.demoURL && (
                        <span class="text-blue-600 font-medium">Demo â†’</span>
                    )}
                    {project.data.repoURL && (
                        <span class="text-gray-600 font-medium">Source</span>
                    )}
                </div>
            </div>
        )}

        <!-- Date badge -->
        <div class="absolute top-4 right-4 text-xs text-gray-500 bg-white/90 backdrop-blur-sm px-2 py-1 rounded">
            {project.data.date.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'short'
            })}
        </div>
    </a>
</article>
