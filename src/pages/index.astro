---
import { getCollection } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import OutsetContainer from "@components/OutsetContainer.astro";
import { HOME } from "@consts";

import BlogPostCard from "@components/cards/BlogPostCard.astro";
import ProjectCard from "@components/cards/ProjectCard.astro";
import ListCard from "@components/cards/ListCard.astro";
import ShotCard from "@components/cards/ShotCard.astro";
import IntroCard from "@components/cards/IntroCard.astro";

// Get all content collections
const shots = await getCollection("shots");
const blogPosts = await getCollection("blog", ({ data }) => !data.draft);
const projects = await getCollection("projects", ({ data }) => !data.draft);
const lists = await getCollection("lists", ({ data }) => !data.draft);

// Combine all content with type information
const allContent = [
    ...shots
        .filter((shot) => shot.data.img)
        .map((item) => ({ ...item, type: "shot" as const })),
    ...blogPosts.map((item) => ({ ...item, type: "blog" as const })),
    ...projects.map((item) => ({ ...item, type: "project" as const })),
    ...lists.map((item) => ({ ...item, type: "list" as const })),
].sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
    <Container>
        <div>
            <section>
                <OutsetContainer>
                    <ul
                        class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 2xl:grid-cols-5 gap-4 2xl:max-w-[1600px] 2xl:mx-auto"
                    >
                        <IntroCard />
                        {
                            allContent.map((item) => {
                                switch (item.type) {
                                    case "shot":
                                        return <ShotCard shot={item} />;
                                    case "blog":
                                        return <BlogPostCard post={item} />;
                                    case "project":
                                        return <ProjectCard project={item} />;
                                    case "list":
                                        return <ListCard list={item} />;
                                }
                            })
                        }
                    </ul>
                </OutsetContainer>
            </section>
        </div>
    </Container>
</PageLayout>
