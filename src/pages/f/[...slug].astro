---
import { getCollection } from "astro:content";
const allFragments = await getCollection("fragment");
const allSets = await getCollection("fragmentSet");

import BaseLayout from "../../layouts/base-layout.astro";
import FragmentSidebar from "../../components/fragment-sidebar.astro";
import { format } from "date-fns";
export async function getStaticPaths() {
    const allFragments = await getCollection("fragment");
    return allFragments.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}
const { entry } = Astro.props;
const fragment_set_title = allSets.find((s) => s.slug === entry.data.set)?.data
    .title;
const { Content } = await entry.render();
---

<style>
    section {
        display: flex;
        justify-content: space-between;
        gap: 1rem;
        flex-wrap: wrap;
    }
    h1 {
        font-size: 2rem;
        font-weight: 300;
    }

    .meta {
        display: flex;
        gap: 0.5rem;
        align-items: center;
        font-size: 0.8rem;
    }
</style>

<BaseLayout title={`${entry.data.title} - nate.rip`}>
    <article class="mx-auto max-w-[720px] flex flex-col">
        <header class="flex flex-col gap-2">
            <h1 class="type-large-3">{entry.data.title}</h1>

            <div class="meta type-small-1 muted-text">
                {
                    entry.data.date_published && (
                        <>
                            <time
                                datetime={entry.data.date_published.toISOString()}
                            >
                                {format(
                                    new Date(entry.data.date_published),
                                    "PPP",
                                )}
                            </time>
                            <span>â€¢</span>
                        </>
                    )
                }
                {entry.data.tags && <p>{entry.data.tags.join(", ")}</p>}
            </div>
            {
                fragment_set_title ? (
                    <p class="text-sm low-contrast-text">
                        Part of {fragment_set_title}
                    </p>
                ) : null
            }
        </header>
        <Content />
    </article>
</BaseLayout>
