---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";
import BackToPrev from "@components/BackToPrev.astro";

export async function getStaticPaths() {
    const allPosts = await getCollection("blog");
    
    // Get all unique tags used across blog posts
    const uniqueTags = [...new Set(
        allPosts
            .filter(post => post.data.tags && post.data.tags.length > 0)
            .flatMap(post => post.data.tags)
    )];
    
    // Create a path for each unique tag
    return uniqueTags.map(tag => ({
        params: { tag },
        props: { tag }
    }));
}

const { tag } = Astro.props;

// Get all posts that have this tag
const data = (await getCollection("blog"))
    .filter((post) => {
        return !post.data.draft && 
               post.data.tags !== undefined && 
               post.data.tags.includes(tag as any); // Cast to any to satisfy TypeScript
    })
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
    [year: string]: CollectionEntry<"blog">[];
};

const posts = data.reduce((acc: Acc, post) => {
    const year = post.data.date.getFullYear().toString();
    if (!acc[year]) {
        acc[year] = [];
    }
    acc[year].push(post);
    return acc;
}, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));
---

<PageLayout title={`Blog posts tagged with "${tag}" | ${BLOG.TITLE}`} description={`Posts about ${tag} | ${BLOG.DESCRIPTION}`}>
    <Container>
        <div>
            <BackToPrev href="/blog"> Back to blog </BackToPrev>
        </div>
        <div class="space-y-10 my-10">
            <div class="font-semibold text-black">Posts tagged with "{tag}"</div>
            {years.length > 0 ? (
                <div class="space-y-4">
                    {years.map((year) => (
                        <section class="space-y-4">
                            <div class="font-semibold text-black">{year}</div>
                            <div>
                                <ul class="flex flex-col gap-4">
                                    {posts[year].map((post) => (
                                        <li>
                                            <ArrowCard entry={post} />
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        </section>
                    ))}
                </div>
            ) : (
                <div class="py-4">
                    <p>No posts found with this tag.</p>
                </div>
            )}
        </div>
    </Container>
</PageLayout>