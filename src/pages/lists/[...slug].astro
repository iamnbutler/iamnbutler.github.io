---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import BackToPrev from "@components/BackToPrev.astro";

export async function getStaticPaths() {
    const lists = (await getCollection("lists"))
        .filter((list) => !list.data.draft)
        .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
    return lists.map((list) => ({
        params: { slug: list.slug },
        props: list,
    }));
}
type Props = CollectionEntry<"lists">;

const list = Astro.props;
const { Content } = await list.render();
---

<PageLayout title={list.data.title} description={list.data.description}>
    <Container>
        <div>
            <BackToPrev href="/lists"> Back to lists </BackToPrev>
        </div>
        <div class="space-y-1 my-10">
            {
                list.data.tags && list.data.tags.length > 0 && (
                    <div class="flex items-center gap-1.5">
                        <div class="font-base text-sm">
                            {list.data.tags?.map((tag, index) => (
                                <>
                                    <a href={`/tags/${tag}`}>{tag}</a>
                                    {index < list.data.tags!.length - 1 && ", "}
                                </>
                            ))}
                        </div>
                    </div>
                )
            }
        </div>
        <div class="text-2xl font-semibold text-black">
            {list.data.title}
        </div>
        <article>
            <Content />
            <div
                class="mt-16 pt-4 border-t border-gray-200 text-sm text-gray-500"
            >
                Last updated <FormattedDate date={list.data.date} />
            </div>
        </article>
    </Container>
</PageLayout>
